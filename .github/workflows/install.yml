name: install

on:
  push:
    tags:
      - "v*"
    branches:
      - "**"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/install.yml"
      - "assets/**"
      - "**.py"
  workflow_dispatch:

jobs:
  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: set_tag
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          tag=$(git describe --tags --match "v*" ${{ github.ref }} || true)
          if [[ $tag != v* ]]; then
            tag=$(curl -sX GET "https://api.github.com/repos/${{ github.repository }}/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | awk '/tag_name/{print $4}' FS='["]')
            if [[ $tag != v* ]]; then
              tag="v0.0.0"
            fi
            tag=$(date "+$tag-%y%m%d-$(git rev-parse --short HEAD)")
          fi
          if ! $($is_release) ; then
            prefix=${tag%-*-*}
            suffix=${tag#$prefix-}
            tag="$prefix-ci.$suffix"
          fi

          echo tag=$tag | tee -a $GITHUB_OUTPUT
          echo is_release=$is_release | tee -a $GITHUB_OUTPUT
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      is_release: ${{ steps.set_tag.outputs.is_release }}

  update:
    needs: meta
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: update
        shell: bash
        run: |
          mkdir -p ./update
          rsync -av \
            --exclude='MaaCommonAssets' \
            --exclude='archive' \
            ./assets/ ./update/
          [ -d ./update/config ] && rm -rf ./update/config
          if [ -d ./update/presets ]; then
            mv ./update/presets ./update/config
          fi
          if [ -f ./update/config/新版全部功能.json ]; then
            cp "./update/config/新版全部功能.json" ./update/config/config.json
          fi
          jq --arg version_name "MaaYuan" --arg url "https://github.com/syoius/MaaYuan" --arg version ${{ needs.meta.outputs.tag }} '. + {"name": $version_name, "url": $url,"version": $version}' ./assets/interface.json > ./update/interface.json

      - uses: actions/upload-artifact@v4
        with:
          name: update
          path: "update"

  install:
    needs: meta
    runs-on: macos-latest
    strategy:
      matrix:
        os: [win, osx, linux]
        arch: [arm64, x64]
        include:
          - os: android
            arch: aarch64
          - os: android
            arch: x86_64
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Map architecture for MaaFramework
        id: map_arch
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "android" ]]; then
            echo "maa_arch=${{ matrix.arch }}" >> $GITHUB_OUTPUT
            echo "maa_os=android" >> $GITHUB_OUTPUT
          else
            if [[ "${{ matrix.arch }}" == "arm64" ]]; then
              echo "maa_arch=aarch64" >> $GITHUB_OUTPUT
            else
              echo "maa_arch=x86_64" >> $GITHUB_OUTPUT
            fi

            if [[ "${{ matrix.os }}" == "win" ]]; then
              echo "maa_os=win" >> $GITHUB_OUTPUT
            elif [[ "${{ matrix.os }}" == "osx" ]]; then
              echo "maa_os=macos" >> $GITHUB_OUTPUT
            else
              echo "maa_os=linux" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1
        with:
          repository: MaaXYZ/MaaFramework
          fileName: "MAA-${{ steps.map_arch.outputs.maa_os }}-${{ steps.map_arch.outputs.maa_arch }}*"
          latest: true
          out-file-path: "deps"
          extract: true

      - name: Install
        shell: bash
        run: |
          python ./install.py ${{ needs.meta.outputs.tag }}
          jq --arg version_name "MaaYuan" --arg url "https://github.com/syoius/MaaYuan" --arg version ${{ needs.meta.outputs.tag }} '. + {"name": $version_name, "url": $url,"version": $version}' ./assets/interface.json > ./install/interface.json

      - name: Download MFAAvalonia
        if: ${{ matrix.os != 'android' }}
        uses: robinraju/release-downloader@v1
        with:
          repository: syoius/MFAAvalonia
          fileName: "MFAAvalonia-*-${{ matrix.os }}-${{ matrix.arch }}*"
          latest: true
          out-file-path: "MFA"
          extract: true

      - name: Install MFAAvalonia
        if: ${{ matrix.os != 'android' }}
        shell: bash
        run: |
          rm -rf ./MFA/resource/base/model
          cp -r ./MFA/* ./install/

      - uses: actions/upload-artifact@v4
        with:
          name: MAAYuan-${{ matrix.os }}-${{ matrix.arch }}
          path: "install"

  release:
    if: ${{ needs.meta.outputs.is_release == 'true' }}
    needs: [meta, install, update]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: assets

      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ needs.meta.outputs.tag }}.zip .)
          done

      - uses: softprops/action-gh-release@v2
        with:
          files: assets/*
          tag_name: ${{ needs.meta.outputs.tag }}
